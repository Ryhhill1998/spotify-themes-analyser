name: "Deploy User Spotify Data Retrieval Lambda"

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Set IMAGE_TAG to git SHA
              id: image_tag
              run: echo "IMAGE_TAG=${GITHUB_SHA}" >> $GITHUB_ENV

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build and push Docker image
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                  ECR_REPOSITORY: user-spotify-data-retrieval-lambda
                  IMAGE_TAG: ${{ env.IMAGE_TAG }}
              run: |
                  cd backend/lambdas/user_spotify_data_retrieval
                  docker buildx build --platform linux/arm64 --load -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                  docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: "~> 1.12"

            - name: Terraform Init
              run: |
                  cd backend/infrastructure
                  terraform init

            - name: Terraform Apply
              run: |
                  cd backend/infrastructure
                  terraform apply -auto-approve -var="image_tag=${IMAGE_TAG}"
